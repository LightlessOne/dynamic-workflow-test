name: Test Vars

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  SOME_GLOBAL_VAR1: "which will be passed to each job's ENV unless overwritten"
  SOME_GLOBAL_VAR2: "can also be used via 'env.SOME_GLOBAL_VAR' context"

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs: # only one level deep key-value (strings only) map here
      level1: some string
      steps: ${{ toJson(steps) }}  # not really an intended way
      something_certain: ${{ steps.step-output-generator2.outputs.some_var_from_job1_step2 }}
      will_i_go_missing: ${{ null }}
    steps:
      - name: Generate outputs 1
        id: step-output-generator1
        run: |
          echo "some_var_from_job1_step1=$SOME_GLOBAL_VAR2" >> "$GITHUB_OUTPUT"
      - name: Generate outputs 2
        id: step-output-generator2
        run: |
          echo "some_var_from_job1_step2=qwertywrtwtwt123 123 12" >> "$GITHUB_OUTPUT"
      - name: Show stuff from previous step
        id: show-previous-step
        run: |
          echo ${{ steps.step-output-generator2.outputs.some_var_from_job1_step2 }}

  containerized-quber-cli:
    needs: job1
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lightlessone/quber_cli:master
    env:
      job1_outputs: ${{ toJson(needs.job1.outputs) }}
    steps:
      - name: Show Job1 Outputs
        id: show-outputs
        run: |
          pwd
          ls -al /usr/quber/
          alias module_cli="python /usr/quber/module_cli"
          module_cli --help
          module_cli download-file

#  call-workflow-in-local-repo:
#    uses: ./.github/workflows/reusable/run_image_module.yml
#    with:
#      qwe: 'qwerty123'